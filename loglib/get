#!/bin/bash
# This script clears the terminal then performs an interactive checkout
# if run from the src directory with RCS nested below src (src/RCS).
# Folder structure should be as follows to use without modification:
# project/src/RCS where "project" is the base folder for the project.
# It can, of course, have a different and more meaningful name. e.g. 4760p1/src/RCS
# The checkin and get scripts should reside in the src directory.


# All .h files, all .c files, the README and the Makefile are checked out.
checkout(){
	cd ./RCS
	co -l *
	mv -f ./*.h ../
	mv -f ./*.c ../
	mv -f ./README ../
	mv -f ./Makefile ../
	echo "Check out complete."
	cd ../
	rm FILES_ARE_CHECKED_IN
	touch FILES_ARE_CHECKED_OUT
	pwd
	ls -la
	exit
}
# Negative response action leaves files as-is and tells the user.
# Negative response also lists files in the current directory
leave(){
	echo "No checkout performed."
	echo "Current working file set remains unchanged:"
	pwd
	ls -la
	exit
}
# On case failure, prompt user for correct input
tryagain(){
	echo "Invalid choice. Read carefully."
	echo "I clearly asked y or n."
	echo "You can reply Y or N if you want to be difficult, but you didn't even do that."
}
# Clear screen and begin interactive checkout
clear
echo "Checking project out from src/RCS ..."
echo "This will check the project out from RCS and overwrite any"
echo "existing files in this directory with the checked out files."

# User prompt to determine if checkout was desired
while true
do
	read -r -p "Are you sure you want to check out the project (y/n)? " choice
	# case to parse response and respond accordingly
	case "$choice" in
	n|N) leave;;
	y|Y) checkout;;
	*) tryagain;;
esac 
done
